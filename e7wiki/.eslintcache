[{"D:\\Bootcamp\\hacktiv8\\Week-13\\react-challenge\\e7wiki\\src\\index.js":"1","D:\\Bootcamp\\hacktiv8\\Week-13\\react-challenge\\e7wiki\\src\\App.js":"2","D:\\Bootcamp\\hacktiv8\\Week-13\\react-challenge\\e7wiki\\src\\reportWebVitals.js":"3","D:\\Bootcamp\\hacktiv8\\Week-13\\react-challenge\\e7wiki\\src\\components\\HeroesCard.js":"4","D:\\Bootcamp\\hacktiv8\\Week-13\\react-challenge\\e7wiki\\src\\hooks\\UseFetch.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":11367,"mtime":1609842346641,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":935,"mtime":1609840023797,"results":"10","hashOfConfig":"7"},{"size":916,"mtime":1609837753537,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1tg1ppv",{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"14"},"D:\\Bootcamp\\hacktiv8\\Week-13\\react-challenge\\e7wiki\\src\\index.js",[],["25","26"],"D:\\Bootcamp\\hacktiv8\\Week-13\\react-challenge\\e7wiki\\src\\App.js",["27","28"],"D:\\Bootcamp\\hacktiv8\\Week-13\\react-challenge\\e7wiki\\src\\reportWebVitals.js",[],"D:\\Bootcamp\\hacktiv8\\Week-13\\react-challenge\\e7wiki\\src\\components\\HeroesCard.js",["29","30"],"function HeroesCard(props) {\r\n  return (\r\n    <div className=\"col-sm-6 col-md-4\">\r\n      <a href=\"\">\r\n        <div className=\"card\" style={{ marginBottom: \"1em\" }}>\r\n          <div className=\"card-header\">{props.hero.name}</div>\r\n          <img\r\n            className=\"card-img-top\"\r\n            src={props.hero.assets.image}\r\n            style={{ width: \"100%\", height: \"15vw\", objectFit: \"cover\" }}\r\n          ></img>\r\n          <div className=\"card-footer\">\r\n            <span>\r\n              <i className=\"fas fa-star\"></i> {props.hero.rarity} |{\" \"}\r\n            </span>\r\n            <span>\r\n              <i className=\"fas fa-universal-access\"></i> {props.hero.attribute}{\" \"}\r\n              |{\" \"}\r\n            </span>\r\n            <span>\r\n              <i className=\"fas fa-user\"></i> {props.hero.role}{\" \"}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HeroesCard;\r\n","D:\\Bootcamp\\hacktiv8\\Week-13\\react-challenge\\e7wiki\\src\\hooks\\UseFetch.js",["31"],"import React, { useState, useEffect } from \"react\";\n\nexport default function useFetch(props) {\n  const [heroList, setHeroList] = useState([]);\n  const [filteredHeroList, setFilteredHeroList] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setLoading(true);\n    fetch(\"https://api.epicsevendb.com/hero\")\n      .then((response) => {\n        if (!response.ok) {\n          throw Error(response.statusText);\n        }\n        return response;\n      })\n      .then((res) => res.json())\n      .then((data) => {\n        setHeroList(data.results);\n        setFilteredHeroList(data.results);\n        setLoading(false);\n      })\n      .catch((err) => {\n        console.log(err);\n        setError(err);\n      });\n  }, []);\n  return {\n    heroList,\n    setHeroList,\n    filteredHeroList,\n    setFilteredHeroList,\n    loading,\n    error,\n  };\n}\n",{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":33,"column":48,"nodeType":"38","messageId":"39","endLine":33,"endColumn":50},{"ruleId":"40","severity":1,"message":"41","line":34,"column":20,"nodeType":"42","messageId":"43","endLine":34,"endColumn":22},{"ruleId":"44","severity":1,"message":"45","line":4,"column":7,"nodeType":"46","endLine":4,"endColumn":18},{"ruleId":"47","severity":1,"message":"48","line":7,"column":11,"nodeType":"46","endLine":11,"endColumn":12},{"ruleId":"49","severity":1,"message":"50","line":1,"column":8,"nodeType":"51","messageId":"52","endLine":1,"endColumn":13},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]